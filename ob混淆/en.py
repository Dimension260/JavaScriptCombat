import requests
import binascii
from Crypto.Cipher import DES
from Crypto.Util.Padding import unpad
import json
import pandas as pd


url = 'https://www.endata.com.cn/API/GetData.ashx'

headers = {
    'user-agent':'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/133.0.0.0 Safari/537.36'
}

year = input('你想查第几年的票房：')

data = {
        'year': year,
        'MethodName': 'BoxOffice_GetYearInfoData'
}

resp = requests.post(url, headers=headers, data=data)

mi = resp.text
# print(mi)
# mi = ''

a = int(mi[-1],16) + 9
b = int(mi[a],16)


def fn(a,b,c):
    if a == 0:
        return a[c:]
    data = a[0: 0+b]
    data += a[b+c:]
    return data

mi = fn(mi, a, 1)
a = mi[b:b+8]
mi = fn(mi, b, 8)

key = a.encode('utf-8')

des = DES.new(key=key, mode = DES.MODE_ECB)
ming_bs = des.decrypt(binascii.a2b_hex(mi))
ming_bs = unpad(ming_bs, 8)
ming_str = ming_bs.decode('utf-8')
# print(ming_str)

ming_str = ming_str[0:ming_str.rindex('}') + 1]
# print(ming_str)
# print(json.loads(ming_str))


# 原始数据（假设变量名为 raw_data）
raw_data = json.loads(ming_str)  # 你提供的数据

# 1. 提取并转换为 DataFrame
df = pd.DataFrame(raw_data["Data"]["Table"])

# 2. 检查数据类型
print(df.dtypes)  # 查看字段类型

# 3. 转换数值字段为数字类型（确保无字符串干扰）
numeric_cols = ["BoxOffice", "AvgPrice", "AvgPeoPle"]
df[numeric_cols] = df[numeric_cols].apply(pd.to_numeric, errors="coerce")

# 4. 转换日期字段为 datetime 类型
df["ReleaseTime"] = pd.to_datetime(df["ReleaseTime"], errors="coerce")

# 5. 处理重复的 Movieid
duplicate_ids = df[df.duplicated("Movieid", keep=False)]
if not duplicate_ids.empty:
    print("发现重复 Movieid:\n", duplicate_ids)
    # 根据需求去重，例如保留第一条
    df = df.drop_duplicates(subset="Movieid", keep="first")

# 6. 处理 Area 字段（拆分为列表）
df["Area"] = df["Area"].str.split("/")

# 7. 检查异常值（例如票房为负数）
invalid_boxoffice = df[df["BoxOffice"] < 0]
if not invalid_boxoffice.empty:
    print("异常票房数据:\n", invalid_boxoffice)
    # 可根据业务逻辑修复或删除（此处示例直接删除）
    df = df[df["BoxOffice"] >= 0]

# 8. 处理缺失值（例如填充或删除空值）
if df.isnull().sum().sum() > 0:
    print("缺失值统计:\n", df.isnull().sum())
    # 示例：删除包含缺失值的行
    df = df.dropna()

# 9. 保存清洗后的数据
df.to_csv("cleaned_movies.csv", index=False)